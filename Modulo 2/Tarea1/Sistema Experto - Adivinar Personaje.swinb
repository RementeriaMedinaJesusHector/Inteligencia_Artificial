<div class="notebook">

<div class="nb-cell markdown" name="md1">
## Sistema Experto: Adivina quien soy
## Rementeria Medina Jesus Hector 20170791
</div>

<div class="nb-cell markdown" name="md2">
#### En este sistema experto se llevara a cabo el uso de personajes de la franquicia de videojuegos shin megami tensei en donde se tomaran parametros como: 

#### -raza
#### -genero 
#### -alineacion (este concepto sera explicado mas adelante) 

#### para que el sistema logre poder adivinar el personaje que el usuario esta buscando
</div>

<div class="nb-cell markdown" name="md4">
### Alineaciones:
------------------------------------------------
#### Ley: Altamente relacionado con los angeles, buscan mantener el orden y el status quo a toda costa buscando
------------------------------------------------

#### Neutral: Como su nombre menciona mantienen una posicion neutral ante las otras 2 alineaciones se busca la conviviencia entre ambos humanos y demonios de forma pacifica
---------------------------------------------------
#### Caos: Se ciernen bajo la ley del mas fuerte, buscan una vida de libertad donde cada quien pueda actuar como quiera sin tener consequencias
--------------------------------------------------
</div>

<div class="nb-cell markdown" name="md3">
### Personajes:

Jonathan: Humano samurai que comparte los ideales de los angeles (ley)

Nozomi: Humana caza recompensas aliada de las hadas (ley)

Flynn: Humano samurai que busca ayudar a la humanidad (neutral)

Isabeau: Humana samurai que busca ayudar a la humanidad (neutral)

Walter: Humano samurai que comparte los ideales de los demonios (caos)

---------------------------------------------------------

Satan: Demonio masculino que trabaja para dios tentando a los humanos (ley)
 
Mothman: Demonio masculino comun que convive con los humanos (neutral)

Yaskini: Demonio femenino que convive con los humamos (nuetral)

Demi Fiend:Demonio masculino que trabaja para lucifer (caos)

Lilith: Demonio femenino encontra de los angeles (caos)

------------------------------------------------------------

Ace Frost: Hada masculina heroica que busca ayudar (ley)

Jack Frost: Hada masculina comun que convive con humanos (neutral)

Pixie: Hada femenina comun que convive con los humanos (neutral)

Black Frost: Hada masculina malvada que busca hacerse mas fuerte (caos)

------------------------------------------------------------

Nahobino: Dios aliado de los angeles (ley)

Amaterasu: Diosa que busca ayudar a otros (ley)

Osiris: Dios que no esta aliado con ningun bando (ley)

Loki: Dios que se divierte cuasando caos (caos)
</div>

<div class="nb-cell program" name="p1">
personaje(jonathan, humano, hombre, ley).
personaje(nozomi,humano,mujer,ley).
personaje(flynn, humano, hombre, neutral).
personaje(issabeu, humano,mujer,neutral).
personaje(walter, humano, hombre, caos).

personaje(satan,demonio,hombre,ley).
personaje(mothman, demonio, hombre, neutral).
personaje(yaskini, demonio, mujer, neutral).
personaje(demi_fiend, demonio, hombre, caos).
personaje(lilith,demonio,mujer,caos).

personaje(ace_frost, hada, hombre, ley).
personaje(jack_frost, hada, hombre, neutral).
personaje(pixie, hada, mujer, neutral).
personaje(black_frost, hada, hombre, caos).

personaje(nahobino, dios, hombre, ley).
personaje(amaterasu, dios, mujer, ley).
personaje(osiris, dios, hombre, neutral).
personaje(loki, dios, hombre, caos).

pregunta_Raza(Raza) :-
    format("¿Tu personaje es humano? (y/n) "), read(Respuesta),
    ((Respuesta == y ; Respuesta == n) -&gt; 
        (Respuesta == y -&gt; Raza = humano;
            (Respuesta == n -&gt; 
                format("¿Tu personaje es un demonio? (y/n) "), read(Respuesta1),
                ((Respuesta1 == y ; Respuesta1 == n) -&gt; 
                    (Respuesta1 == y -&gt; Raza = demonio;
                        (Respuesta1 == n -&gt; 
                            format("¿Tu personaje es un hada? (y/n) "), read(Respuesta2),
                            ((Respuesta2 == y ; Respuesta2 == n) -&gt; 
                                (Respuesta2 == y -&gt; Raza = hada;
                                    (Respuesta2 == n -&gt; Raza = dios)
                                );
                                pregunta_Raza(Raza)
                            )
                        )
                    );
                    pregunta_Raza(Raza)
                )
            )
        )
    ;
        pregunta_Raza(Raza)
    ).

pregunta_Genero(Genero) :- 
    format("¿Es tu personaje hombre? (y/n) "), read(Respuesta),
    ((Respuesta == y ; Respuesta == n) -&gt; 
        (Respuesta == y -&gt; Genero = hombre; 
            (Respuesta == n -&gt; Genero = mujer)
        );
        pregunta_Genero(Genero)
    ).

pregunta_Alineacion(Alineacion) :-
    format("¿Tu personaje es alineación ley? (y/n) "), read(Respuesta),
    ((Respuesta == y ; Respuesta == n) -&gt; 
        (Respuesta == y -&gt; Alineacion = ley;
            (Respuesta == n -&gt; 
                format("¿Tu personaje es alineación neutral? (y/n) "), read(Respuesta1),
                ((Respuesta1 == y ; Respuesta1 == n) -&gt; 
                    (Respuesta1 == y -&gt; Alineacion = neutral;
                        (Respuesta1 == n -&gt; Alineacion = caos)
                    );
                    pregunta_Alineacion(Alineacion)
                )
            )
        )
    ;
        pregunta_Alineacion(Alineacion)
    ).

%El programa siempre corre 2 veces incluso sin esto asi que tienes
%que decirle que no quieres volver a jugar 2 veces para salir%

preguntar_otra_vez :-
    write("¿Quieres volver a jugar? (y/n) "),
    read(Respuesta),
    ((Respuesta == 'y' ; Respuesta == 'n') -&gt; 
        (Respuesta == 'y' -&gt; jugar;
            (Respuesta == 'n' -&gt; 
                write("Gracias por jugar conmigo"), nl
            )
        );
        preguntar_otra_vez
    ).

% Juego
jugar :-
    pregunta_Raza(Raza),
    pregunta_Genero(Genero),
    pregunta_Alineacion(Alineacion),
    findall(Nombre, personaje(Nombre, Raza, Genero, Alineacion), Coincidencias),
    mostrar_Coincidencias(Coincidencias),
    preguntar_otra_vez.

mostrar_Coincidencias([]) :-
    format("Me rindo, ¿Es tu personaje alguien más? (y/n) "), read(Respuesta),
    ((Respuesta == y ; Respuesta == n) -&gt; 
        (Respuesta == y -&gt; jugar;
            (Respuesta == n -&gt; true)
        );
        mostrar_Coincidencias([])
    ).

mostrar_Coincidencias([Nombre|Resto]) :-
    format("Tu personaje podría ser ~w. ¿Es correcto? (y/n) ", [Nombre]),
    read(Respuesta),
    ((Respuesta == y ; Respuesta == n) -&gt; 
        (Respuesta == y -&gt; format("¡Felicidades! Tu personaje es ~w.~n", [Nombre]);
            (Respuesta == n -&gt; mostrar_Coincidencias(Resto))
        );
        mostrar_Coincidencias([Nombre|Resto])
    ).

% Start the game
:- initialization(jugar).
</div>

<div class="nb-cell query" name="q1">
jugar
</div>

</div>
